[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider : FDR.BaseTypes.HtmlDocument
    new : () -> HtmlProvider
    HtmlDocument.Create(false, FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "doctor_who.html")))

    static member AsyncGetSample: () -> HtmlProvider async
    let f = new Func<_,_>(fun (t:TextReader) -> HtmlDocument.Create(false, t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "doctor_who.html"), f)

    static member AsyncLoad: uri:string -> HtmlProvider async
    let f = new Func<_,_>(fun (t:TextReader) -> HtmlDocument.Create(false, t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" "HTML" "" uri), f)

    static member GetSample: () -> HtmlProvider
    HtmlDocument.Create(false, FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "doctor_who.html")))

    member Lists: HtmlProvider+ListsContainer with get
    this

    static member Load: stream:System.IO.Stream -> HtmlProvider
    HtmlDocument.Create(false, ((new StreamReader(stream)) :> TextReader))

    static member Load: reader:System.IO.TextReader -> HtmlProvider
    HtmlDocument.Create(false, reader)

    static member Load: uri:string -> HtmlProvider
    HtmlDocument.Create(false, FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" "HTML" "" uri)))

    static member Parse: text:string -> HtmlProvider
    HtmlDocument.Create(false, ((new StringReader(text)) :> TextReader))

    member Tables: HtmlProvider+TablesContainer with get
    this


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ListsContainer : FDR.BaseTypes.HtmlDocument
    member ``External links``: HtmlProvider+ExternalLinks with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "External links")

    member Languages: HtmlProvider+Languages with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Languages")

    member List12: HtmlProvider+List12 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List12")

    member ``See also``: HtmlProvider+SeeAlso with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "See also")


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+TablesContainer : FDR.BaseTypes.HtmlDocument
    member ``50th Anniversary``: HtmlProvider+50thAnniversary with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Reader / Starring", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdates", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "50th Anniversary", true)

    member ``Audiobook readings``: HtmlProvider+AudiobookReadings with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Reader", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdates", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Audiobook readings", true)

    member ``Home video releases``: HtmlProvider+HomeVideoReleases with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Release date", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Home video releases", true)

    member ``Overview of seasons and series``: HtmlProvider+OverviewOfSeasonsAndSeries with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Season/Series", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Season/Series2", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Doctor", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Serials", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Premiere Date (UK)", TextRuntime.ConvertDateTime("", value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Premiere viewers (in millions)", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[7])
                                        TextRuntime.GetNonOptionalValue("Finale Date (UK)", TextRuntime.ConvertDateTime("", value), value),
                                        let value = TextConversions.AsString(row.[8])
                                        TextRuntime.GetNonOptionalValue("Finale viewers (in millions)", TextRuntime.ConvertFloat("", "", value), value),
                                        let value = TextConversions.AsString(row.[9])
                                        TextRuntime.GetNonOptionalValue("Average viewers (in millions)", TextRuntime.ConvertFloat("", "", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Overview of seasons and series", true)

    member ``Radio broadcasts``: HtmlProvider+RadioBroadcasts with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director/Producer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Radio broadcasts", true)

    member ``Radio broadcasts 2``: HtmlProvider+RadioBroadcasts2 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director/Producer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Radio broadcasts 2", true)

    member ``Radio broadcasts 3``: HtmlProvider+RadioBroadcasts3 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director/Producer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Radio broadcasts 3", true)

    member ``Radio broadcasts 4``: HtmlProvider+RadioBroadcasts4 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director/Producer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Radio broadcasts 4", true)

    member ``Radio broadcasts 5``: HtmlProvider+RadioBroadcasts5 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director/Producer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Radio broadcasts 5", true)

    member ``Season 1 (1963-64)``: HtmlProvider+Season1196364 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 1 (1963-64)", true)

    member ``Season 10 (1972-73)``: HtmlProvider+Season10197273 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 10 (1972-73)", true)

    member ``Season 11 (1973-74)``: HtmlProvider+Season11197374 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 11 (1973-74)", true)

    member ``Season 12 (1974-75)``: HtmlProvider+Season12197475 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 12 (1974-75)", true)

    member ``Season 13 (1975-76)``: HtmlProvider+Season13197576 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 13 (1975-76)", true)

    member ``Season 14 (1976-77)``: HtmlProvider+Season14197677 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 14 (1976-77)", true)

    member ``Season 15 (1977-78)``: HtmlProvider+Season15197778 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 15 (1977-78)", true)

    member ``Season 16 (1978-79)``: HtmlProvider+Season16197879 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 16 (1978-79)", true)

    member ``Season 17 (1979-80)``: HtmlProvider+Season17197980 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 17 (1979-80)", true)

    member ``Season 18 (1980-81)``: HtmlProvider+Season18198081 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 18 (1980-81)", true)

    member ``Season 19 (1982)``: HtmlProvider+Season191982 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 19 (1982)", true)

    member ``Season 2 (1964-65)``: HtmlProvider+Season2196465 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 2 (1964-65)", true)

    member ``Season 20 (1983)``: HtmlProvider+Season201983 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 20 (1983)", true)

    member ``Season 21 (1984)``: HtmlProvider+Season211984 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 21 (1984)", true)

    member ``Season 21 (1984) continued``: HtmlProvider+Season211984Continued with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 21 (1984) continued", true)

    member ``Season 22 (1985)``: HtmlProvider+Season221985 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 22 (1985)", true)

    member ``Season 23 (1986)``: HtmlProvider+Season231986 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 23 (1986)", true)

    member ``Season 24 (1987)``: HtmlProvider+Season241987 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 24 (1987)", true)

    member ``Season 25 (1988-89)``: HtmlProvider+Season25198889 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 25 (1988-89)", true)

    member ``Season 26 (1989)``: HtmlProvider+Season261989 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 26 (1989)", true)

    member ``Season 3 (1965-66)``: HtmlProvider+Season3196566 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 3 (1965-66)", true)

    member ``Season 4 (1966-67)``: HtmlProvider+Season4196667 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 4 (1966-67)", true)

    member ``Season 4 (1966-67) continued``: HtmlProvider+Season4196667Continued with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 4 (1966-67) continued", true)

    member ``Season 5 (1967-68)``: HtmlProvider+Season5196768 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 5 (1967-68)", true)

    member ``Season 6 (1968-69)``: HtmlProvider+Season6196869 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 6 (1968-69)", true)

    member ``Season 7 (1970)``: HtmlProvider+Season71970 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 7 (1970)", true)

    member ``Season 8 (1971)``: HtmlProvider+Season81971 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 8 (1971)", true)

    member ``Season 9 (1972)``: HtmlProvider+Season91972 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 9 (1972)", true)

    member ``See also``: HtmlProvider+SeeAlso with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Column1", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "See also", false)

    member ``Series 1``: HtmlProvider+Series1 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Original release", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 1", true)

    member ``Series 1 (2005)``: HtmlProvider+Series12005 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 1 (2005)", true)

    member ``Series 2``: HtmlProvider+Series2 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Original release", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 2", true)

    member ``Series 2 (2006)``: HtmlProvider+Series22006 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 2 (2006)", true)

    member ``Series 3 (2007)``: HtmlProvider+Series32007 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 3 (2007)", true)

    member ``Series 4 (2008)``: HtmlProvider+Series42008 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 4 (2008)", true)

    member ``Series 5 (2010)``: HtmlProvider+Series52010 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 5 (2010)", true)

    member ``Series 6 (2011)``: HtmlProvider+Series62011 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 6 (2011)", true)

    member ``Series 7 (2012-13)``: HtmlProvider+Series7201213 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 7 (2012-13)", true)

    member ``Series 7 (2012-13) continued``: HtmlProvider+Series7201213Continued with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 7 (2012-13) continued", true)

    member ``Series 8 (2014)``: HtmlProvider+Series82014 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 8 (2014)", true)

    member ``Special (1983)``: HtmlProvider+Special1983 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Special (1983)", true)

    member ``Special (2006)``: HtmlProvider+Special2006 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Special (2006)", true)

    member ``Special (2014)``: HtmlProvider+Special2014 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertFloat("", "", value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Special (2014)", true)

    member Specials: HtmlProvider+Specials with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Doctor", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Season/Series", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Premiere Date (UK)", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Finale Date (UK)", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Average viewers (in millions)", TextRuntime.ConvertFloat("", "", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials", true)

    member ``Specials (2005)``: HtmlProvider+Specials2005 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2005)", true)

    member ``Specials (2007)``: HtmlProvider+Specials2007 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2007)", true)

    member ``Specials (2008-10)``: HtmlProvider+Specials200810 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2008-10)", true)

    member ``Specials (2010-11)``: HtmlProvider+Specials201011 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2010-11)", true)

    member ``Specials (2011-12)``: HtmlProvider+Specials201112 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2011-12)", true)

    member ``Specials (2012)``: HtmlProvider+Specials2012 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2012)", true)

    member ``Specials (2013)``: HtmlProvider+Specials2013 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2013)", true)

    member Table66: HtmlProvider+Table66 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Doctor Who", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Doctor Who 2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table66", true)

    member Table67: HtmlProvider+Table67 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Column1", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table67", false)

    member Table68: HtmlProvider+Table68 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Column1", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table68", false)

    member Table69: HtmlProvider+Table69 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Column1", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table69", false)

    member Table70: HtmlProvider+Table70 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Column1", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table70", false)

    member Table71: HtmlProvider+Table71 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Column1", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table71", false)

    member ``Television broadcasts``: HtmlProvider+TelevisionBroadcasts with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Television broadcasts", true)

    member ``Television movie (1996)``: HtmlProvider+TelevisionMovie1996 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Television movie (1996)", true)

    member Webcasts: HtmlProvider+Webcasts with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Webcasts", true)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+50thAnniversary : FDR.BaseTypes.HtmlTable<HtmlProvider+50thAnniversary+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+AudiobookReadings : FDR.BaseTypes.HtmlTable<HtmlProvider+AudiobookReadings+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ExternalLinks : FDR.BaseTypes.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+HomeVideoReleases : FDR.BaseTypes.HtmlTable<HtmlProvider+HomeVideoReleases+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Languages : FDR.BaseTypes.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List12 : FDR.BaseTypes.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+OverviewOfSeasonsAndSeries : FDR.BaseTypes.HtmlTable<HtmlProvider+OverviewOfSeasonsAndSeries+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts : FDR.BaseTypes.HtmlTable<HtmlProvider+RadioBroadcasts+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts2 : FDR.BaseTypes.HtmlTable<HtmlProvider+RadioBroadcasts2+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts3 : FDR.BaseTypes.HtmlTable<HtmlProvider+RadioBroadcasts3+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts4 : FDR.BaseTypes.HtmlTable<HtmlProvider+RadioBroadcasts4+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts5 : FDR.BaseTypes.HtmlTable<HtmlProvider+RadioBroadcasts5+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season10197273 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season10197273+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season11197374 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season11197374+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season1196364 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season1196364+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season12197475 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season12197475+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season13197576 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season13197576+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season14197677 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season14197677+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season15197778 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season15197778+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season16197879 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season16197879+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season17197980 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season17197980+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season18198081 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season18198081+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season191982 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season191982+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season201983 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season201983+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season211984 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season211984+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season211984Continued : FDR.BaseTypes.HtmlTable<HtmlProvider+Season211984Continued+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season2196465 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season2196465+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season221985 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season221985+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season231986 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season231986+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season241987 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season241987+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season25198889 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season25198889+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season261989 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season261989+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season3196566 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season3196566+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season4196667 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season4196667+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season4196667Continued : FDR.BaseTypes.HtmlTable<HtmlProvider+Season4196667Continued+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season5196768 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season5196768+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season6196869 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season6196869+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season71970 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season71970+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season81971 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season81971+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season91972 : FDR.BaseTypes.HtmlTable<HtmlProvider+Season91972+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+SeeAlso : FDR.BaseTypes.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+SeeAlso : FDR.BaseTypes.HtmlTable<HtmlProvider+SeeAlso+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series1 : FDR.BaseTypes.HtmlTable<HtmlProvider+Series1+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series12005 : FDR.BaseTypes.HtmlTable<HtmlProvider+Series12005+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series2 : FDR.BaseTypes.HtmlTable<HtmlProvider+Series2+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series22006 : FDR.BaseTypes.HtmlTable<HtmlProvider+Series22006+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series32007 : FDR.BaseTypes.HtmlTable<HtmlProvider+Series32007+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series42008 : FDR.BaseTypes.HtmlTable<HtmlProvider+Series42008+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series52010 : FDR.BaseTypes.HtmlTable<HtmlProvider+Series52010+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series62011 : FDR.BaseTypes.HtmlTable<HtmlProvider+Series62011+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series7201213 : FDR.BaseTypes.HtmlTable<HtmlProvider+Series7201213+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series7201213Continued : FDR.BaseTypes.HtmlTable<HtmlProvider+Series7201213Continued+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series82014 : FDR.BaseTypes.HtmlTable<HtmlProvider+Series82014+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Special1983 : FDR.BaseTypes.HtmlTable<HtmlProvider+Special1983+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Special2006 : FDR.BaseTypes.HtmlTable<HtmlProvider+Special2006+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Special2014 : FDR.BaseTypes.HtmlTable<HtmlProvider+Special2014+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials : FDR.BaseTypes.HtmlTable<HtmlProvider+Specials+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials2005 : FDR.BaseTypes.HtmlTable<HtmlProvider+Specials2005+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials2007 : FDR.BaseTypes.HtmlTable<HtmlProvider+Specials2007+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials200810 : FDR.BaseTypes.HtmlTable<HtmlProvider+Specials200810+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials201011 : FDR.BaseTypes.HtmlTable<HtmlProvider+Specials201011+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials201112 : FDR.BaseTypes.HtmlTable<HtmlProvider+Specials201112+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials2012 : FDR.BaseTypes.HtmlTable<HtmlProvider+Specials2012+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials2013 : FDR.BaseTypes.HtmlTable<HtmlProvider+Specials2013+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table66 : FDR.BaseTypes.HtmlTable<HtmlProvider+Table66+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table67 : FDR.BaseTypes.HtmlTable<HtmlProvider+Table67+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table68 : FDR.BaseTypes.HtmlTable<HtmlProvider+Table68+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table69 : FDR.BaseTypes.HtmlTable<HtmlProvider+Table69+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table70 : FDR.BaseTypes.HtmlTable<HtmlProvider+Table70+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table71 : FDR.BaseTypes.HtmlTable<HtmlProvider+Table71+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+TelevisionBroadcasts : FDR.BaseTypes.HtmlTable<HtmlProvider+TelevisionBroadcasts+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+TelevisionMovie1996 : FDR.BaseTypes.HtmlTable<HtmlProvider+TelevisionMovie1996+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Webcasts : FDR.BaseTypes.HtmlTable<HtmlProvider+Webcasts+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+50thAnniversary+Row : string * string * string * string * System.DateTime
    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdates``: System.DateTime with get
    (let _,_,_,_,t5 = this in t5)

    member ``Reader / Starring``: string with get
    (let _,_,_,t4,_ = this in t4)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+AudiobookReadings+Row : string * string * string * string * string
    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdates``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Reader: string with get
    (let _,_,_,t4,_ = this in t4)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+HomeVideoReleases+Row : string * string * string * string * string
    member Director: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Release date``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+OverviewOfSeasonsAndSeries+Row : string * string * string * int * int * System.DateTime * decimal * System.DateTime * float * float
    member ``Average viewers (in millions)``: float with get
    (let _,_,_,_,_,_,_,_,_,t10 = this in t10)

    member Doctor: string with get
    (let _,_,t3,_,_,_,_,_,_,_ = this in t3)

    member Episodes: int with get
    (let _,_,_,_,t5,_,_,_,_,_ = this in t5)

    member ``Finale Date (UK)``: System.DateTime with get
    (let _,_,_,_,_,_,_,t8,_,_ = this in t8)

    member ``Finale viewers (in millions)``: float with get
    (let _,_,_,_,_,_,_,_,t9,_ = this in t9)

    member ``Premiere Date (UK)``: System.DateTime with get
    (let _,_,_,_,_,t6,_,_,_,_ = this in t6)

    member ``Premiere viewers (in millions)``: decimal with get
    (let _,_,_,_,_,_,t7,_,_,_ = this in t7)

    member Season/Series: string with get
    (let t1,_,_,_,_,_,_,_,_,_ = this in t1)

    member Season/Series2: string with get
    (let _,t2,_,_,_,_,_,_,_,_ = this in t2)

    member Serials: int with get
    (let _,_,_,t4,_,_,_,_,_,_ = this in t4)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts+Row : string * string * string * string * string
    member Director/Producer: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts2+Row : string * string * string * string * string
    member Director/Producer: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts3+Row : string * string * string * string * string
    member Director/Producer: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts4+Row : string * string * string * string * string
    member Director/Producer: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts5+Row : string * string * string * string * string
    member Director/Producer: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season10197273+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season11197374+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season1196364+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season12197475+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season13197576+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season14197677+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season15197778+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season16197879+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season17197980+Row : string * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: string with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season18198081+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season191982+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season201983+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season211984+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season211984Continued+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season2196465+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season221985+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season231986+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season241987+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season25198889+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season261989+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season3196566+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season4196667+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season4196667Continued+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season5196768+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season6196869+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season71970+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season81971+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season91972+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+SeeAlso+Row : string * string
    member Column1: string with get
    (let t1,_ = this in t1)

    member Column2: string with get
    (let _,t2 = this in t2)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series1+Row : int * string * string * System.DateTime
    member No: int with get
    (let t1,_,_,_ = this in t1)

    member ``Original release``: System.DateTime with get
    (let _,_,_,t4 = this in t4)

    member Title: string with get
    (let _,t2,_,_ = this in t2)

    member Writer: string with get
    (let _,_,t3,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series12005+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series2+Row : int * string * string * System.DateTime
    member No: int with get
    (let t1,_,_,_ = this in t1)

    member ``Original release``: System.DateTime with get
    (let _,_,_,t4 = this in t4)

    member Title: string with get
    (let _,t2,_,_ = this in t2)

    member Writer: string with get
    (let _,_,t3,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series22006+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series32007+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series42008+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series52010+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series62011+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series7201213+Row : int * string * string * string * string * System.DateTime
    member Director: string with get
    (let _,_,_,_,t5,_ = this in t5)

    member Episodes: string with get
    (let _,_,t3,_,_,_ = this in t3)

    member No: int with get
    (let t1,_,_,_,_,_ = this in t1)

    member ``Original airdate``: System.DateTime with get
    (let _,_,_,_,_,t6 = this in t6)

    member Title: string with get
    (let _,t2,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,t4,_,_ = this in t4)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series7201213Continued+Row : int * string * string * string * string * System.DateTime
    member Director: string with get
    (let _,_,_,_,t5,_ = this in t5)

    member Episodes: string with get
    (let _,_,t3,_,_,_ = this in t3)

    member No: int with get
    (let t1,_,_,_,_,_ = this in t1)

    member ``Original airdate``: System.DateTime with get
    (let _,_,_,_,_,t6 = this in t6)

    member Title: string with get
    (let _,t2,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,t4,_,_ = this in t4)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Series82014+Row : int * string * string * string * string * string
    member Director: string with get
    (let _,_,_,_,t5,_ = this in t5)

    member Episodes: string with get
    (let _,_,t3,_,_,_ = this in t3)

    member No: int with get
    (let t1,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,t6 = this in t6)

    member Title: string with get
    (let _,t2,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,t4,_,_ = this in t4)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Special1983+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Special2006+Row : int * string * string * string * string * string * System.DateTime
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: System.DateTime with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Special2014+Row : int * float * string * string * string * System.DateTime
    member Director: string with get
    (let _,_,_,_,t5,_ = this in t5)

    member Episodes: string with get
    (let _,_,t3,_,_,_ = this in t3)

    member No: int with get
    (let t1,_,_,_,_,_ = this in t1)

    member ``Original airdate``: System.DateTime with get
    (let _,_,_,_,_,t6 = this in t6)

    member Title: float with get
    (let _,t2,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,t4,_,_ = this in t4)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials+Row : string * string * int * string * string * float
    member ``Average viewers (in millions)``: float with get
    (let _,_,_,_,_,t6 = this in t6)

    member Doctor: string with get
    (let t1,_,_,_,_,_ = this in t1)

    member Episodes: int with get
    (let _,_,t3,_,_,_ = this in t3)

    member ``Finale Date (UK)``: string with get
    (let _,_,_,_,t5,_ = this in t5)

    member ``Premiere Date (UK)``: string with get
    (let _,_,_,t4,_,_ = this in t4)

    member Season/Series: string with get
    (let _,t2,_,_,_,_ = this in t2)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials2005+Row : string * string * string * string * string * string * System.DateTime
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: string with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: System.DateTime with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials2007+Row : string * string * string * string * string * string * System.DateTime
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: string with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: System.DateTime with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials200810+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials201011+Row : string * string * string * string * string * string * System.DateTime
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: string with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: System.DateTime with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials201112+Row : string * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: string with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials2012+Row : string * string * string * string * string * string
    member Director: string with get
    (let _,_,_,_,t5,_ = this in t5)

    member Episodes: string with get
    (let _,_,t3,_,_,_ = this in t3)

    member No: string with get
    (let t1,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,t6 = this in t6)

    member Title: string with get
    (let _,t2,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,t4,_,_ = this in t4)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Specials2013+Row : string * string * string * string * string * string
    member Director: string with get
    (let _,_,_,_,t5,_ = this in t5)

    member Episodes: string with get
    (let _,_,t3,_,_,_ = this in t3)

    member No: string with get
    (let t1,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,t6 = this in t6)

    member Title: string with get
    (let _,t2,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,t4,_,_ = this in t4)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table66+Row : string * string
    member ``Doctor Who``: string with get
    (let t1,_ = this in t1)

    member ``Doctor Who 2``: string with get
    (let _,t2 = this in t2)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table67+Row : string * string
    member Column1: string with get
    (let t1,_ = this in t1)

    member Column2: string with get
    (let _,t2 = this in t2)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table68+Row : string * string
    member Column1: string with get
    (let t1,_ = this in t1)

    member Column2: string with get
    (let _,t2 = this in t2)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table69+Row : string * string
    member Column1: string with get
    (let t1,_ = this in t1)

    member Column2: string with get
    (let _,t2 = this in t2)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table70+Row : string * string
    member Column1: string with get
    (let t1,_ = this in t1)

    member Column2: string with get
    (let _,t2 = this in t2)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table71+Row : string * string
    member Column1: string with get
    (let t1,_ = this in t1)

    member Column2: string with get
    (let _,t2 = this in t2)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+TelevisionBroadcasts+Row : string * string * string * string * string
    member Director: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+TelevisionMovie1996+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Webcasts+Row : string * string * string * string * string
    member Director: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


