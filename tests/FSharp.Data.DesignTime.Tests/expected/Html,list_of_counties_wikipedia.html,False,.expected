[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider : FDR.BaseTypes.HtmlDocument
    new : () -> HtmlProvider
    HtmlDocument.Create(false, FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "list_of_counties_wikipedia.html")))

    static member AsyncGetSample: () -> HtmlProvider async
    let f = new Func<_,_>(fun (t:TextReader) -> HtmlDocument.Create(false, t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "list_of_counties_wikipedia.html"), f)

    static member AsyncLoad: uri:string -> HtmlProvider async
    let f = new Func<_,_>(fun (t:TextReader) -> HtmlDocument.Create(false, t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" "HTML" "" uri), f)

    static member GetSample: () -> HtmlProvider
    HtmlDocument.Create(false, FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "list_of_counties_wikipedia.html")))

    member Lists: HtmlProvider+ListsContainer with get
    this

    static member Load: stream:System.IO.Stream -> HtmlProvider
    HtmlDocument.Create(false, ((new StreamReader(stream)) :> TextReader))

    static member Load: reader:System.IO.TextReader -> HtmlProvider
    HtmlDocument.Create(false, reader)

    static member Load: uri:string -> HtmlProvider
    HtmlDocument.Create(false, FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" "HTML" "" uri)))

    static member Parse: text:string -> HtmlProvider
    HtmlDocument.Create(false, ((new StringReader(text)) :> TextReader))

    member Tables: HtmlProvider+TablesContainer with get
    this


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ListsContainer : FDR.BaseTypes.HtmlDocument
    member Commentary: HtmlProvider+Commentary with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Commentary")

    member Languages: HtmlProvider+Languages with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Languages")


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+TablesContainer : FDR.BaseTypes.HtmlDocument
    member ``List of most populous built-up areas in England and Wales``: HtmlProvider+ListOfMostPopulousBuiltUpAreasInEnglandAndWales with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Rank", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Built-up area", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Population (2011 Census)", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Area", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Density (People/km²)", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Major subdivisions", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Metropolitan Area", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[7])
                                        TextRuntime.GetNonOptionalValue("Notable changes between 2001 and 2011 censuses", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "List of most populous built-up areas in England and Wales", true)

    member ``List of most populous urban areas in Northern Ireland``: HtmlProvider+ListOfMostPopulousUrbanAreasInNorthernIreland with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Rank", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Urban Area", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Population (2001 Census)", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Area (km²)", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Density (People/km²)", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Major subdivisions", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Metropolitan Area", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "List of most populous urban areas in Northern Ireland", true)

    member ``List of most populous urban areas in Scotland``: HtmlProvider+ListOfMostPopulousUrbanAreasInScotland with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Rank", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Urban Area", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Population (2001 Census)", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Area (km²)", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Density (People/km²)", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Major subdivisions", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Metropolitan Area", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "List of most populous urban areas in Scotland", true)

    member Table5: HtmlProvider+Table5 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("List of settlements in the United Kingdom", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("List of settlements in the United Kingdom 2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table5", true)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Commentary : FDR.BaseTypes.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Languages : FDR.BaseTypes.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ListOfMostPopulousBuiltUpAreasInEnglandAndWales : FDR.BaseTypes.HtmlTable<HtmlProvider+ListOfMostPopulousBuiltUpAreasInEnglandAndWales+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ListOfMostPopulousUrbanAreasInNorthernIreland : FDR.BaseTypes.HtmlTable<HtmlProvider+ListOfMostPopulousUrbanAreasInNorthernIreland+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ListOfMostPopulousUrbanAreasInScotland : FDR.BaseTypes.HtmlTable<HtmlProvider+ListOfMostPopulousUrbanAreasInScotland+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table5 : FDR.BaseTypes.HtmlTable<HtmlProvider+Table5+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ListOfMostPopulousBuiltUpAreasInEnglandAndWales+Row : int * string * decimal * decimal * decimal * string * string * string
    member Area: decimal<MeasureProduct`2> with get
    (let _,_,_,t4,_,_,_,_ = this in t4)

    member ``Built-up area``: string with get
    (let _,t2,_,_,_,_,_,_ = this in t2)

    member ``Density (People/km²)``: decimal with get
    (let _,_,_,_,t5,_,_,_ = this in t5)

    member ``Major subdivisions``: string with get
    (let _,_,_,_,_,t6,_,_ = this in t6)

    member ``Metropolitan Area``: string with get
    (let _,_,_,_,_,_,t7,_ = this in t7)

    member ``Notable changes between 2001 and 2011 censuses``: string with get
    (let _,_,_,_,_,_,_,t8 = this in t8)

    member ``Population (2011 Census)``: decimal with get
    (let _,_,t3,_,_,_,_,_ = this in t3)

    member Rank: int with get
    (let t1,_,_,_,_,_,_,_ = this in t1)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ListOfMostPopulousUrbanAreasInNorthernIreland+Row : int * string * decimal * decimal * decimal * string * string
    member ``Area (km²)``: decimal with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member ``Density (People/km²)``: decimal with get
    (let _,_,_,_,t5,_,_ = this in t5)

    member ``Major subdivisions``: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member ``Metropolitan Area``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member ``Population (2001 Census)``: decimal with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Rank: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Urban Area``: string with get
    (let _,t2,_,_,_,_,_ = this in t2)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ListOfMostPopulousUrbanAreasInScotland+Row : int * string * decimal * decimal * decimal * string * string
    member ``Area (km²)``: decimal with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member ``Density (People/km²)``: decimal with get
    (let _,_,_,_,t5,_,_ = this in t5)

    member ``Major subdivisions``: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member ``Metropolitan Area``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member ``Population (2001 Census)``: decimal with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Rank: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Urban Area``: string with get
    (let _,t2,_,_,_,_,_ = this in t2)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Table5+Row : string * string
    member ``List of settlements in the United Kingdom``: string with get
    (let t1,_ = this in t1)

    member ``List of settlements in the United Kingdom 2``: string with get
    (let _,t2 = this in t2)


